package main

import (
	_ "embed"
	"fmt"
	"io/ioutil"
	"log"
	"os"
	"path/filepath"

	"github.com/stackb/grpc-starlark/pkg/program"
	"github.com/stackb/grpc-starlark/pkg/protodescriptorset"
)

//go:embed {DESCRIPTOR_PATH}
var descriptorFile []byte

//go:embed {MAIN_PATH}
var mainFile []byte

func main() {
	cwd, err := os.Getwd()
	if err != nil {
		log.Fatal(err)
	}
	if err := run(cwd, os.Args[1:]); err != nil {
		fmt.Fprintln(os.Stderr, err)
		os.Exit(1)
	}
}

func run(wd string, args []string) error {
	file, err := ioutil.TempFile(os.Getenv("TMPDIR"), filepath.Base(os.Args[0]+".star"))
	if err != nil {
		return err
	}
	if err := os.WriteFile(file.Name(), mainFile, os.ModePerm); err != nil {
		return err
	}
	defer os.Remove(file.Name())

	files, err := protodescriptorset.ParseFiles(descriptorFile)
	if err != nil {
		return err
	}

	cfg := program.NewConfig()
	if err := cfg.ParseArgs(args); err != nil {
		return err
	}
	if cfg.File == "" {
		cfg.File = file.Name()
	}
	cfg.ProtoFiles = files
	cfg.ProtoTypes = protodescriptorset.FileTypes(files)

	program, err := program.NewProgram(cfg)
	if err != nil {
		return err
	}

	if err := program.Run(); err != nil {
		return err
	}

	return nil
}
