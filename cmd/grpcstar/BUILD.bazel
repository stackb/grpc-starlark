load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
load("//:platforms.bzl", "platforms")

# gazelle:ignore testdata

go_library(
    name = "grpcstar_lib",
    srcs = [
        "grpcstar.go",
    ],
    importpath = "github.com/stackb/grpc-starlark/cmd/grpcstar",
    visibility = ["//visibility:private"],
    deps = [
        "//pkg/program",
    ],
)

go_binary(
    name = "grpcstar",
    embed = [":grpcstar_lib"],
    visibility = ["//visibility:public"],
)

[
    go_binary(
        name = "grpcstar_%s_%s" % (
            platform.os,
            platform.arch,
        ),
        embed = [":grpcstar_lib"],
        gc_linkopts = platform.gc_linkopts,
        goarch = platform.arch,
        goos = platform.os,
        pure = "on",
        static = "on",
        visibility = ["//visibility:public"],
    )
    for platform in platforms
]

[
    genrule(
        name = "grpcstar_%s_%s_zip" % (
            platform.os,
            platform.arch,
        ),
        srcs = ["grpcstar_%s_%s" % (
            platform.os,
            platform.arch,
        )],
        outs = ["grpcstar_%s_%s.zip" % (
            platform.os,
            platform.arch,
        )],
        cmd = """
    cp $(location grpcstar_{os}_{arch}) grpcstar
    $(location @bazel_tools//tools/zip:zipper) c $@ grpcstar
    """.format(
            arch = platform.arch,
            os = platform.os,
        ),
        tools = ["@bazel_tools//tools/zip:zipper"],
        visibility = ["//visibility:public"],
    )
    for platform in platforms
]

go_test(
    name = "grpcstar_test",
    srcs = ["integration_test.go"],
    data = glob(["testdata/**"]) + ["//example/routeguide:routeguide_proto_descriptor"],
    embed = [":grpcstar_lib"],
    deps = [
        "@com_github_google_go_cmp//cmp",
        "@net_starlark_go//lib/time",
    ],
)
